C51 COMPILER V9.60.0.0   SLAVECOD                                                          09/15/2020 08:31:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SLAVECOD
OBJECT MODULE PLACED IN .\Objects\slavecod.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE slavecod.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -slavecod.lst) TABS(3) OBJECT(.\Objects\slavecod.obj)

line level    source

   1          #include<reg51.h>
   2          
   3          
   4          
   5          //LCD Module Connections
   6          #define display_port P1    //Data pins connected to port 2 on microcontroller
   7          sbit rs = P3^6;            //RS pin connected to pin 6 of port 3
   8          sbit rw = P3^5;            // RW pin connected to pin 5 of port 3
   9          sbit e =  P3^4;            //E pin connected to pin 4 of port 3
  10          //End LCD Module Connections
  11          
  12          //Stepper Motor connections
  13          sbit motor_pin_1=P2^0;
  14          sbit motor_pin_2=P2^1;
  15          sbit motor_pin_3=P3^2;
  16          sbit motor_pin_4=P2^3;
  17          
  18          //End of stepper motor connections
  19          
  20          //Led connections
  21            sbit yellow_led=P2^4;
  22            sbit green_led=P2^5;
  23            sbit red_led=P2^6;
  24             sbit orange_led=P2^7;
  25            //End of led connections
  26            
  27          int counter=0;
  28          void msdelay(unsigned int time)  // Function for creating delay in milliseconds.
  29          {
  30   1          unsigned i,j ;
  31   1          for(i=0;i<time;i++)    
  32   1          for(j=0;j<1275;j++);
  33   1      }
  34          
  35          
  36          void lcd_cmd(unsigned char command)  //Function to send command instruction to LCD
  37          {
  38   1          display_port = command;
  39   1          rs= 0;
  40   1          rw=0;
  41   1          e=1;
  42   1          msdelay(1);
  43   1          e=0;
  44   1      }
  45          
  46          void lcd_data(unsigned char disp_data)  //Function to send display data to LCD
  47          {
  48   1          display_port = disp_data;
  49   1          rs= 1;
  50   1          rw=0;
  51   1          e=1;
  52   1          msdelay(1);
  53   1          e=0;
  54   1      }
C51 COMPILER V9.60.0.0   SLAVECOD                                                          09/15/2020 08:31:08 PAGE 2   

  55          
  56          
  57           void lcd_init()    //Function to prepare the LCD  and get it ready
  58          {
  59   1          lcd_cmd(0x38);  // for using 2 lines and 5X7 matrix of LCD
  60   1          msdelay(10);
  61   1          lcd_cmd(0x0F);  // turn display ON, cursor blinking
  62   1          msdelay(10);
  63   1          lcd_cmd(0x01);  //clear screen
  64   1          msdelay(10);
  65   1          lcd_cmd(0x81);  // bring cursor to position 1 of line 1
  66   1          msdelay(10);
  67   1      }
  68          
  69          
  70          
  71          void Ext_int_Init()           
  72          {
  73   1         EA  = 1;       /* Enable global interrupt */
  74   1         ES = 1;        /* Enable serial interrupt */       
  75   1      }
  76          
  77          
  78          void UART_Init()
  79          {
  80   1         TMOD = 0x20;      /* Timer 1, 8-bit auto reload mode */
  81   1         TH1 = 0xFD;    /* Load value for 9600 baud rate */
  82   1         SCON = 0x50;      /* Mode 1, reception enable */
  83   1         TR1 = 1;    /* Start timer 1 */
  84   1      }
  85          
  86          void display_msg1(){
  87   1         lcd_init();
  88   1         lcd_cmd(0x0C);
  89   1         lcd_data('A');
  90   1         lcd_data('S');
  91   1         lcd_data('C');
  92   1         lcd_data('I');
  93   1         lcd_data('I');
  94   1         lcd_data(' ');
  95   1         lcd_data('C');
  96   1         lcd_data('o');
  97   1         lcd_data('d');
  98   1         lcd_data('e');
  99   1         lcd_data(':');
 100   1          
 101   1      }
 102          
 103          void display_msg2(){
 104   1      lcd_cmd(0xC0);   //Force cursor to the start of second line
 105   1      lcd_data(' ');
 106   1      lcd_data('R');
 107   1      lcd_data('o');
 108   1      lcd_data('t');
 109   1      lcd_data('a');
 110   1      lcd_data('t'); 
 111   1      lcd_data('i');
 112   1      lcd_data('o');
 113   1      lcd_data('n');
 114   1      lcd_data(':');
 115   1      
 116   1      }
C51 COMPILER V9.60.0.0   SLAVECOD                                                          09/15/2020 08:31:08 PAGE 3   

 117          
 118          void Serial_ISR() interrupt 4    
 119          {
 120   1         counter++;
 121   1         //lcd_data(SBUF);    /* Give received data to LCD */
 122   1         RI = 0;        /* Clear RI flag */
 123   1         
 124   1         if(counter==4){
 125   2            display_msg1();
 126   2           lcd_data('4');
 127   2           lcd_data('5');
 128   2           lcd_data('C');
 129   2           lcd_data('W');
 130   2           display_msg2();
 131   2             lcd_data('4');
 132   2           lcd_data('5');
 133   2            lcd_data(' ');
 134   2            lcd_data('d');
 135   2            lcd_data('e');
 136   2            lcd_data('g');
 137   2            lcd_data(' ');
 138   2           lcd_data('C');
 139   2           lcd_data('W');
 140   2            P2=0x00;
 141   2            P2=0x08;
 142   2            yellow_led=1;
 143   2         }
 144   1         if(counter==8){
 145   2           display_msg1();
 146   2           lcd_data('9');
 147   2           lcd_data('0');
 148   2           lcd_data('C');
 149   2           lcd_data('W');
 150   2            display_msg2();
 151   2            lcd_data('9');
 152   2           lcd_data('0');
 153   2            
 154   2            lcd_data(' ');
 155   2            lcd_data('d');
 156   2            lcd_data('e');
 157   2            lcd_data('g');
 158   2            lcd_data(' ');
 159   2            
 160   2           lcd_data('C');
 161   2           lcd_data('W');
 162   2            P2=0x00;
 163   2            P2=0x0C;
 164   2            green_led=1;
 165   2         }
 166   1         if(counter==12){
 167   2            display_msg1();
 168   2           lcd_data('4');
 169   2           lcd_data('5');
 170   2           lcd_data('A');
 171   2           lcd_data('W');
 172   2            display_msg2();
 173   2            lcd_data('4');
 174   2           lcd_data('5');
 175   2            
 176   2            lcd_data(' ');
 177   2            lcd_data('d');
 178   2            lcd_data('e');
C51 COMPILER V9.60.0.0   SLAVECOD                                                          09/15/2020 08:31:08 PAGE 4   

 179   2            lcd_data('g');
 180   2            lcd_data(' ');
 181   2            
 182   2           lcd_data('A');
 183   2           lcd_data('W');
 184   2            P2=0x00;
 185   2            P2=0x01; // value for 45 deg CW
 186   2            red_led=1;
 187   2         }
 188   1         
 189   1         if(counter==16){
 190   2            display_msg1();
 191   2           lcd_data('9');
 192   2           lcd_data('0');
 193   2           lcd_data('A');
 194   2           lcd_data('W');
 195   2            display_msg2();
 196   2            lcd_data('9');
 197   2           lcd_data('0');
 198   2             
 199   2            lcd_data(' ');
 200   2            lcd_data('d');
 201   2            lcd_data('e');
 202   2            lcd_data('g');
 203   2            lcd_data(' ');
 204   2            
 205   2           lcd_data('A');
 206   2           lcd_data('W');
 207   2            
 208   2            P2=0x00;
 209   2            P2=0x03;
 210   2            orange_led=1;
 211   2           counter=0;
 212   2         }
 213   1         
 214   1         
 215   1      } 
 216          
 217          
 218          void rotate_motor(){
 219   1      
 220   1      
 221   1      }
 222          void main(){
 223   1        P2=0x00;
 224   1      
 225   1         P1 = 0x00;     /* Make P1 output */
 226   1         Ext_int_Init();   /* Call Ext. interrupt initialize */
 227   1         UART_Init();      /*Initializing the Serial Port */
 228   1         
 229   1          lcd_init();
 230   1         while(1){
 231   2          
 232   2         }
 233   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   SLAVECOD                                                          09/15/2020 08:31:08 PAGE 5   

   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
